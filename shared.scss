$back-grnd: rgb(36, 36, 36);

@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@300;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Russo+One&display=swap");

* {
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  background: $back-grnd;
  font-family: "Roboto", sans-serif;
  margin: 0;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

main {
  margin-top: 4rem;
}

.back-drop {
  background-color: rgba(36, 36, 36, 0.8);
  width: 100%;
  height: 100vh;
  z-index: 100;
  position: fixed;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  visibility: hidden;
  transition: all 0.5s ease;
}

/*** *** *** MODAL *** *** ***/

.modal {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  justify-self: center;
  align-self: center;
  position: fixed;
  z-index: 150;
  width: 60%;
  height: max-content;
  min-width: max-content;
  background-color: orange;
  padding: 1rem 2rem;
  border-radius: 10px;
  text-align: center;
  opacity: 0;
  transform: translateX(0) translateY(-100%);
  transition: all 0.5s ease;
  top: 20%;
  visibility: hidden;

  &__title {
    color: white;
    text-align: center;
    font-size: 1.8rem;
  }
  &__actions {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  &__action {
    width: 20vw;
    min-width: max-content;
    color: white;
    font: inherit;
    font-size: 1.3rem;
    font-weight: bold;
    border: 4px solid white;
    border-radius: 5px;
    background: transparent;
    text-decoration: none;
    padding: 0.5rem;
    transition: all 0.2s ease;
    margin: 0 2px;
    cursor: pointer;
    &:hover,
    &:active {
      background: white;
      color: orange;
    }
    &:focus {
      outline: none;
    }
  }
}

/*** *** *** HAMBURGER BUTTON *** *** ***/
.toggle-button {
  width: 3rem;
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 0 0.5rem;
  &:focus {
    outline: none;
  }
  &__bar {
    width: 100%;
    height: 0.2rem;
    background: orange;
    display: block;
    margin: 0.6rem 0;
  }
}

/*** *** *** PAGE MAIN LOGO HEADER *** *** ***/
.main-header {
  position: fixed;
  backdrop-filter: blur(5px);
  z-index: 10;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: rgba(36, 36, 36, 0.5);
  padding: 0.5rem;
  width: 100%;
  & div {
    display: flex;
  }

  &__logo img {
    height: 2.5rem;
    margin: 0.3rem;
    transition: all 0.2s ease;
    &:hover,
    &:active {
      filter: drop-shadow(0px 0px 4px orange);
    }
  }

  /*** *** *** MAIN HEADER TITLE *** *** ***/
  &__brand {
    display: none;
    color: orange;
    text-decoration: none;
    font-family: "Russo One", sans-serif;
    font-size: 2.3rem;
    &:hover {
      text-shadow: 0px 0px 10px orange;
      color: white;
    }
  }
}

////////////////////////////////////
//////////// MOBILE NAV ////////////
////////////////////////////////////

.mobile-nav {
  display: flex;
  position: fixed;
  flex-direction: column;
  z-index: 200;
  background: rgba(36, 36, 36, 0.7);
  width: 80vw;
  height: 100vh;
  opacity: 0;
  transform: translateX(-100%) translateY(0);
  transition: all 0.5s ease-out;

  &__close-btn {
    width: 2.5rem;
    height: 2.5rem;
    color: orange;
    margin: 1rem;
    font-size: 2rem;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    align-self: flex-end;
    cursor: pointer;
    border-radius: 50%;
    border: 3px solid orange;
    transition: all 0.2s ease;
    z-index: 200;

    &:hover {
      background-color: orange;
      color: white;
    }
  }

  &__items {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    list-style: none;
    padding: 0;
    margin: 0;
    transform: translateY(-100px);
  }

  &__item {
    width: 100%;
    height: 4rem;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    text-align: center;
  }
  &__link {
    color: orange;
    width: 80%;
    height: 100%;
    font-size: 1.5rem;
    text-decoration: none;
    font-family: inherit;
    display: flex;
    align-items: center;
    justify-content: center;
    border-bottom: 4px solid transparent;
    transition: all 0.3s ease-out;

    &:hover {
      color: white;
      border-bottom: 4px solid white;
    }
  }
}

/*** *** *** NAV BAR ITEMS *** *** ***/
.main-nav {
  display: none;

  &__items {
    margin: 0;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: space-between;
    list-style: none;

    &__item {
      font-size: 1.3rem;
      font-weight: bold;
      color: orange;
      text-decoration: none;
      margin: 0 0.5rem;
      padding: 0.5rem 0;
      border-bottom: 3px solid transparent;
      border-top: 3px solid transparent;
      transition: all 0.3s ease-out;
      &:hover,
      &:active {
        border-bottom: 3px solid white;
        color: white;
      }
      &.cta {
        padding: 0.5rem;
        border: 3px solid orange;
        border-radius: 5px;
        &:hover,
        &:active {
          color: white;
          background: orange;
        }
      }
    }
  }
}

/*** *** *** PAGE FOOTER *** *** ***/
.main-footer {
  background: rgba(36, 36, 36, 0.6);
  margin-top: 3rem;

  &__links {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 2rem 0;

    &__link {
      width: 40vw;
      min-width: 8.5rem;
      font-size: 1.3rem;
      font-weight: bold;
      margin: 0.5rem 0;
      text-align: center;
      color: orange;
      border: 3px orange solid;
      border-radius: 5px;
      text-decoration: none;

      &:hover,
      &:active {
        color: white;
        background: orange;
      }
    }
  }
}

.open {
  // display: flex;
  opacity: 1;
  transform: translateX(0) translateY(0);
  visibility: visible;
}

@media (min-width: 768px) and (orientation: landscape) {
  .main-header__brand {
    font-size: 2.6rem;
    display: block;
  }

  .modal {
    &__title {
      font-size: 2.5rem;
      min-width: max-content;
    }
    &__action {
      font-size: 1rem;
    }

    &__action--negative {
      display: inline-block;
    }
  }

  .main-nav {
    display: inline-block;
  }

  .toggle-button {
    display: none;
  }

  .main-footer__links {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    width: 100%;
    &__link {
      margin: 0 0.5rem;
      min-width: 6rem;
      max-width: 14rem;
      font-size: 1.2rem;
    }
  }
}

@mixin glitchCopy {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch {
  position: relative;
  // color: white;
  // font-size: 4em;
  // letter-spacing: 0.5em;
  /* Animation provies a slight random skew. Check bottom of doc
	for more information on how to random skew. */
  animation: glitch-anim2 1s infinite linear alternate-reverse;

  // Creates a copy before our text.
  &::before {
    // Duplicates our text with the mixin.
    @include glitchCopy;
    // Scoots text slightly to the left for the color offset.
    left: 2px;
    // Creates the color 'shadow' that happens on the glitch.
    text-shadow: -2px 0 #ff00c1;
    /* Creates an initial clip for our glitch. This works in
		a typical top,right,bottom,left fashion and creates a mask
		to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
		with an alternating animation to keep things fresh. */
    animation: glitch-anim2 5s infinite linear alternate-reverse;
  }

  // Creates a copy after our text. Note comments from ::before.
  &::after {
    @include glitchCopy;
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
    animation: glitch-anim 1s infinite linear alternate-reverse;
  }
}

/* Creates an animation with 20 steaps. For each step, it calculates
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      transform: skew((random(100) / 100) + deg);
    }
  }
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      transform: skew((random(100) / 100) + deg);
    }
  }
}
